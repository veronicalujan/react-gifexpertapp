{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IAEzBR,GAAe,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCLlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCDPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAIlC,OAFAc,QAAQC,IAAIN,EAAGC,EAAMV,GAGjB,sBAAKgB,UAAU,oDAAf,UAEI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCNHS,EAAU,SAAC,GAAe,IAAdrB,EAAa,EAAbA,SAErB,ECFwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA0BA,OArBAC,qBAAW,WAEN1B,EAAQC,GACP0B,MAAM,SAAAC,GAKAH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAOtB,CAACtB,IAIGuB,ED1BwBK,CAAa5B,GAAhCa,EAAZ,EAAON,KAAae,EAApB,EAAoBA,QAKpB,OAHAN,QAAQC,IAAIK,GAIR,qCACA,oBAAIJ,UAAU,mDAAd,SAAkElB,IAGjEsB,GAAW,mBAAGJ,UAAU,wCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAGQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aElBpBkB,EAAgB,WAEzB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAQA,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADJA,YCpBlC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ca42e226.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if (inputValue.trim().length>2){\r\n            //console.log(inputValue);\r\n            setCategories( cats=>[ inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=nugS6MeiCKFjyDKx67hSCvDMoLofgUr0`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    });\r\n\r\n    return gifs;\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    console.log(id,title,url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__lightSpeedInRight\">\r\n            {/* {img.title} */}\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) =>{\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    console.log(loading);\r\n\r\n    \r\n    return (\r\n        <>\r\n        <h3 className=\"card animate__animated animate__lightSpeedInLeft\">{category}</h3>\r\n\r\n        {/* {loading ? 'Cargando...' : 'Fin de carga'} */}\r\n        {loading && <p className=\"card animate__animated animate__flash\">Loading...</p>}\r\n\r\n        <div className=\"card-grid\">\r\n\r\n            {\r\n                images.map(img => (\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        {...img} \r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n        </>\r\n\r\n    )\r\n\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ()=>{\r\n\r\n         getGifs(category)\r\n         .then( imgs => {\r\n\r\n            // setTimeout (()=> {\r\n                // console.log(imgs);\r\n                \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n                \r\n            // }, 3000);\r\n\r\n         });\r\n\r\n    }, [category])\r\n\r\n    \r\n\r\n    return state; //{data: [], loading: true}\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n    //const categories = ['One Punch','Samurai X','Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    \r\n    // const handleAdd=()=>{\r\n    //     //categories.push('HunterXHunter');\r\n    //     setCategories( categs=>['HunterXHunter',...categories] );\r\n    //     //setCategories(['HunterXHunter',...categories] );\r\n    // }\r\n    \r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key= {category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GiftExpertApp} from './GiftExpertApp';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n//GiftExpertApp\n"],"sourceRoot":""}